#!/usr/bin/env bash
# requires https://github.com/vlevit/notify-send.sh
set -Eeuo pipefail

export DISPLAY=:0
export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
readonly TERMINAL=xfce4-terminal
readonly PRGLOC=${0}
readonly DBPATH=/var/lib/pacman
readonly REPLID=/tmp/check-updates.pid
readonly TIMEOUT=1000000

PROMPT=false

for dep in notify-send.sh yay fakeroot ${PRGLOC} ${TERMINAL}; do
	[[ -x $(command -v -- "${dep}") ]]
done

readonly ERRLOG=$(mktemp)
exec 2>"${ERRLOG}"
trap -- 'rc=$?; error_check "${rc}" "${LINENO}"' EXIT ERR

function notify(){
	local msg=${1}
	local promptupgrade=()

	${PROMPT} && promptupgrade=(-o "upgrade:${TERMINAL} -e '${PRGLOC} --upgrade'")

	exec -- notify-send.sh -t "${TIMEOUT}" -R "${REPLID}" "${promptupgrade[@]}" -- 'Arch Update Tracker' "${msg}"
}

function error_check(){
	local reason
	local rc=${1}
	local line=${2}

	reason=$(<"${ERRLOG}")
	rm -f -- "${ERRLOG}"

	((rc == 0)) && exit 0
	notify "${reason}\\nline: ${line}\\nrc: ${rc}"
}

function update_db(){
	local updates
	local tmpdb
	local paclocal=${DBPATH}/local
	local ramdir=/dev/shm/

	[[ -d ${paclocal} && -r ${paclocal} ]]
	[[ -d ${ramdir} && -w ${ramdir} ]]

	tmpdb=$(find "${ramdir}" -type l -lname "${paclocal}" -printf '%h' -quit) || { printf 'real line: %q' "${LINENO}" >&2; exit 1; }

	if [[ -z ${tmpdb} || ! -w ${tmpdb} ]]; then
		tmpdb=$(mktemp -d -p "${ramdir}") || { printf 'real line: %q' "${LINENO}" >&2; exit 1; }
		ln -s -- "${paclocal}" "${tmpdb}"
	fi

	yay --sudo fakeroot -Syyb "${tmpdb}" >/dev/null
	updates=$(yay -Qub "${tmpdb}") || { printf 'real line: %q' "${LINENO}" >&2; exit 1; }
	[[ -z ${updates} ]] && exit 0

	PROMPT=true notify "${updates}"
}

function upgrade_sys(){
	exec 2>&1
	trap - EXIT ERR
	set +Eeuo pipefail

	esc='\e[0m'
	color='\e[91m\e[1m::\e[0m \e[1m'

	printf '%bRunning yay -Syyu%b\n' "${color}" "${esc}"
	yay -Syyu

	printf '\n%bRunning yay -Rns < <(yay -Qdtq)%b\n' "${color}" "${esc}"
	yay -Rns < <(yay -Qdtq) 2>/dev/null || printf 'Nothing to do.\n'

	printf '\n%bRunning yay -Scc%b' "${color}" "${esc}"
	printf 'y\ny\ny\n' | yay -Scc &>/dev/null

	printf '\nDone.\n\n%bRunning yay -Ps%b\n' "${color}" "${esc}"
	yay -Ps

# 	printf '\n%bRunning avg-audit%b\n' "${color}" "${esc}"
# 	optionally get avg-audit here: https://github.com/i34/avg-audit
# 	avg-audit -f packages,severity,type,affected,name

	exec /bin/bash
}

while(($# > 0)); do
	case ${1} in
		-u | --upgrade) upgrade_sys; shift; ;;
		*) exit ;;
	esac
done

update_db
